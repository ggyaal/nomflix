{"version":3,"sources":["assets/noImage.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/MenuBar.js","Components/Overview.js","Components/Videos.js","Components/Actors.js","Components/Seasons.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","Circle","Bar","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","prototype","PropTypes","number","isRequired","string","bool","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","onChange","value","show","name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","TVPresenter","topRated","airingToday","TVContainer","MenuBar","Menu","select","split","includes","Overview","p","Companies","Company","CompanyImg","img","CompanyName","overview","companies","company","logo_path","origin_country","Main","Side","Iframe","iframe","VideoList","Videos","StateBtn","VideoBtn","idx","num","setNum","src","onClick","videos","useState","key","allowFullScreen","item","Actors","ActorDiv","ActorImg","Texts","Name","RealName","Actor","actor","profile_path","character","cast","Seasons","Season","SeasonImg","Date","seasons","season","air_date","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","IMDB","More","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","href","imdb_id","path","component","production_companies","credits","DetailContainer","match","push","history","parsedId","parseInt","isNaN","console","log","exact","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36107e26.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noImage.ce601e9d.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default Section;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Circle = styled.div`\n    background-color: rgba(0, 0, 0, .3);\n    height: 200px;\n    width: 200px;\n    display: flex;\n    justify-content: center;\n    border-radius: 50%;\n    margin-top: 20px;\n`;\n\nconst Bar = styled.div`\n    @keyframes rotate {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n    }\n    background-color: #c0392b;\n    height: 100px;\n    width: 30px;\n    border-radius: 20px;\n    transition: 0.5s;\n    transform-origin: bottom;\n    animation: rotate 5s infinite;\n`;\n\nexport default () => (\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">\n            <Circle>\n                <Bar />\n            </Circle>\n        </span>\n    </Container>\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired\n}\n\nexport default Message;","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl });\n    height: 180px;\n    background-size: cover;\n    border-radius: 5px;\n    background-position: center center;\n    transition: opacity .2s linear;\n`;\n\nconst Rating = styled.span`\n    position: absolute;\n    bottom: 5px;\n    right: 5px;\n    opacity: 0;\n    transition: opacity .2s linear;\n`;\n\nconst ImageContainer = styled.div`\n    position: relative;\n    margin-bottom: 5px;\n    &:hover {\n        ${Image} {\n            opacity: .3;\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    }\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    opacity: .5;\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n    <Link to={isMovie ? `/movie/${id}/overview` : `/show/${id}/overview`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noImage.png\").default} />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">⭐️</span>{\" \"}{rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>{title.length > 15 ? `${title.substring(0, 15)}...`: title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.prototype = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n};\n\nexport default Poster;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) =>\n    <>\n        <Helmet>\n            <title>Movies | Nomflex</title>\n        </Helmet>\n        {loading? <Loader /> : (\n            <Container>\n                {nowPlaying && nowPlaying.length > 0 && (\n                    <Section title=\"Now Playing\">\n                        {nowPlaying.map(movie => (\n                                <Poster \n                                    key={movie.id}\n                                    id={movie.id}\n                                    imageUrl={movie.poster_path}\n                                    title={movie.title}\n                                    rating={movie.vote_average}\n                                    year={movie.release_date && movie.release_date.substring(0, 4)}\n                                    isMovie={true}\n                                />\n                            )\n                        )}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"Popular Playing\">\n                        {popular.map(movie => (\n                                <Poster \n                                    key={movie.id}\n                                    id={movie.id}\n                                    imageUrl={movie.poster_path}\n                                    title={movie.title}\n                                    rating={movie.vote_average}\n                                    year={movie.release_date && movie.release_date.substring(0, 4)}\n                                    isMovie={true}\n                                />\n                            )\n                        )}\n                    </Section>\n                )}\n                {upcoming && upcoming.length > 0 && (\n                    <Section title=\"Upcoming Playing\">\n                        {upcoming.map(movie => (\n                                <Poster \n                                    key={movie.id}\n                                    id={movie.id}\n                                    imageUrl={movie.poster_path}\n                                    title={movie.title}\n                                    rating={movie.vote_average}\n                                    year={movie.release_date && movie.release_date.substring(0, 4)}\n                                    isMovie={true}\n                                />\n                            )\n                        )}\n                    </Section>\n                )}\n                {error && (\n                    <Message color=\"#e74c3c\" text={error} />\n                )}\n            </Container>\n            )\n        };\n    </>\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upcoming: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default HomePresenter;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"c91549bb9d838946788a86f2a69e2273\",\n        language: \"ko-KR\"\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upComing: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: \"videos,credits\"\n        }\n    }),\n    search: term => api.get(\"search/movie\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id => api.get(`tv/${id}`, {\n        params: {\n            append_to_response: \"videos,credits\"\n        }\n    }),\n    search: term => api.get(\"search/tv\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from 'api';\n\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    }\n\n    async componentDidMount() {\n        try {\n            const { \n                data:  { results: nowPlaying }\n            } = await moviesApi.nowPlaying();\n            const  {\n                data: { results: upcoming }\n            } = await moviesApi.upComing();\n            const  {\n                data: { results: popular }\n            } = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n        } catch {\n            this.setState({\n                error: \"Can't find movie information.\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\nimport { Helmet } from 'react-helmet';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, handleSubmit, updateTerm, loading, error }) => \n    (\n        <Container>\n            <Helmet>\n                <title>Search | Nomflex</title>\n            </Helmet>\n            <Form onSubmit={handleSubmit}>\n                <Input placeholder=\"Search Movies or TV Shows...\" onChange={updateTerm} value={searchTerm}/>\n            </Form>\n            { loading ? <Loader /> : (\n                <>\n                    {movieResults && movieResults.length > 0 && (\n                        <Section title=\"Movie results\">\n                            {movieResults.map(movie => (\n                                    <Poster \n                                        key={movie.id}\n                                        id={movie.id}\n                                        imageUrl={movie.poster_path}\n                                        title={movie.title}\n                                        rating={movie.vote_average}\n                                        year={movie.release_date && movie.release_date.substring(0, 4)}\n                                        isMovie={true}\n                                    />\n                                )\n                            )}\n                        </Section>\n                    )}\n                    {tvResults && tvResults.length > 0 && (\n                        <Section title=\"TV Show results\">\n                            {tvResults.map(show => (\n                                    <Poster \n                                        key={show.id}\n                                        id={show.id}\n                                        imageUrl={show.poster_path}\n                                        title={show.name}\n                                        rating={show.vote_average}\n                                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                                    />\n                                )\n                            )}\n                        </Section>\n                    )}\n                    {error && (\n                        <Message color=\"#e74c3c\" text={error} />\n                    )}\n                    {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n                        <Message color=\"#bdc3c7\" text=\"Noting Found\" />\n                    )}\n                </>\n            )}\n        </Container>\n    );\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    airingToday: PropTypes.array,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from 'api';\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        error: null,\n        loading: false\n    };\n    \n    handleSubmit = event => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if(searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = event => {\n        const { target: { value }} = event;\n        this.setState({\n            searchTerm: value\n        })\n    }\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        try {\n            const {\n                data: { results: movieResults }\n            } = await moviesApi.search(searchTerm);\n            const {\n                data: { results: tvResults }\n            } = await tvApi.search(searchTerm);\n            this.setState({ loading: true });\n            this.setState({\n                movieResults,\n                tvResults\n            });\n        }catch {\n            this.setState({\n                error: \"Can't find results.\"\n            });\n        }finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                error={error}\n                loading={loading}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        );\n    }\n}","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    padding: 0px 10px;\n    background-color: rgba(20, 20, 20, .8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, .8);\n`;\nconst List = styled.ul`\n    display: flex;\n`;\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 5px solid ${props => props.current? \"#c23616\": \"transparent\"};\n    transition: border-bottom .5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst Title = styled.div`\n    text-transform: uppercase;\n    font-size: 30px;\n    margin-right: 50px;\n    color: #c0392b;\n    font-weight: 800;\n    padding: 5px;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n    <Header>\n        <Title><SLink to=\"/\">GGYFlix</SLink></Title>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\n    (<>\n        <Helmet>\n            <title>TV | Nomflex</title>\n        </Helmet>\n        {loading? <Loader /> : (\n            <Container>\n                    {topRated && topRated.length > 0 && (\n                        <Section title=\"Top Rated Shows\">\n                            {topRated.map(show => (\n                                    <Poster \n                                        key={show.id}\n                                        id={show.id}\n                                        imageUrl={show.poster_path}\n                                        title={show.name}\n                                        rating={show.vote_average}\n                                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                                    />\n                                )\n                            )}\n                        </Section>\n                    )}\n                    {popular && popular.length > 0 && (\n                        <Section title=\"Popular Shows\">\n                            {popular.map(show => (\n                                    <Poster \n                                        key={show.id}\n                                        id={show.id}\n                                        imageUrl={show.poster_path}\n                                        title={show.name}\n                                        rating={show.vote_average}\n                                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                                    />\n                                )\n                            )}\n                        </Section>\n                    )}\n                    {airingToday && airingToday.length > 0 && (\n                        <Section title=\"AiringTday Shows\">\n                            {airingToday.map(show => (\n                                    <Poster \n                                        key={show.id}\n                                        id={show.id}\n                                        imageUrl={show.poster_path}\n                                        title={show.name}\n                                        rating={show.vote_average}\n                                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                                    />\n                                )\n                            )}\n                        </Section>\n                    )}\n                    {error && (\n                        <Message color=\"#e74c3c\" text={error} />\n                    )}\n            </Container>\n        )}\n    </>\n);\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from './TVContainer';\n\nexport default TVContainer;","import React from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from 'api';\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: topRated }\n            } = await tvApi.topRated();\n            const {\n                data: { results: popular }\n            } = await tvApi.popular();\n            const {\n                data: { results: airingToday }\n            } = await tvApi.airingToday();\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            });\n        }catch {\n            this.setState({\n                error: \"Can't find TV information.\"\n            });\n        }finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { topRated, popular, airingToday, loading, error } = this.state;\n        return (\n            <TVPresenter\n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        );\n    }\n}","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst MenuBar = styled.ul`\n    margin: 30px 0;\n    display: flex;\n`;\n\nconst Menu = styled.li`\n    & span {\n        background-color: ${props => props.select? \"#c0392b\": \"transparent\"};\n        transition: background-color .5s;\n    }\n    text-align: center;\n    border-radius: 20px;\n    width: 100px;\n    padding: 5px;\n    margin-right: 10px;\n    font-size: 17px;\n    background-color: rgba(0, 0, 0, .5);\n`;\n\nexport default withRouter(({ location: { pathname }}) => (\n    <MenuBar>\n        <Menu select={pathname === `/${pathname.split(\"/\")[1]}/${pathname.split(\"/\")[2]}/overview`}>\n            <Link to={`/${pathname.split(\"/\")[1]}/${pathname.split(\"/\")[2]}/overview`}>\n                <span>OVERVIEW</span>\n            </Link>\n        </Menu>\n        <Menu select={pathname === `/${pathname.split(\"/\")[1]}/${pathname.split(\"/\")[2]}/videos`}>\n            <Link to={`/${pathname.split(\"/\")[1]}/${pathname.split(\"/\")[2]}/videos`}>\n                <span>ViDEOS</span>\n            </Link>\n        </Menu>\n        <Menu select={pathname === `/${pathname.split(\"/\")[1]}/${pathname.split(\"/\")[2]}/actors`}>\n            <Link to={`/${pathname.split(\"/\")[1]}/${pathname.split(\"/\")[2]}/actors`}>\n                <span>ACTORS</span>\n            </Link>\n        </Menu>\n        {pathname.includes(\"movie\")? null : (\n            <Menu select={pathname === `/${pathname.split(\"/\")[1]}/${pathname.split(\"/\")[2]}/seasons`}>\n                <Link to={`/${pathname.split(\"/\")[1]}/${pathname.split(\"/\")[2]}/seasons`}>\n                    <span>SEASONS</span>\n                </Link>\n            </Menu>\n        )}\n    </MenuBar>\n));","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst Overview = styled.p`\n    height: 200px;\n    overflow: auto;\n    font-size: 12px;\n    opacity: .7;\n    line-height: 1.5;\n    width: 80%;\n`;\n\nconst Companies = styled.div`\n    display:flex;\n    width: 90%;\n    flex-wrap: wrap;\n    height: 400px;\n    overflow-y: auto;\n`;\n\nconst Company = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-right: 20px;\n`;\n\nconst CompanyImg = styled.div`\n    height: 150px;\n    width: 150px;\n    background-image: url(${props => props.img? `https://image.tmdb.org/t/p/original${props.img}`: require(\"../assets/noImage.png\").default});\n    background-position: center center;\n    background-size: contain;\n    background-repeat: no-repeat;\n`;\n\nconst CompanyName = styled.div``;\n\nexport default ({ overview, companies }) => (\n    <>\n        <Overview>{(overview && overview.length > 0)? overview : \"관련 정보가 없습니다.\"}</Overview>\n        <Companies>\n            {companies.map(company => (\n                <Company key={company.id}>\n                    <CompanyImg img={company.logo_path}></CompanyImg>\n                    <CompanyName>[{company.origin_country}]{company.name}</CompanyName>\n                </Company>\n            ))}\n        </Companies>\n    </>\n);","import { useState } from 'react';\nimport styled from 'styled-components';\n\n\n\nconst Container = styled.div`\n\n`;\n\nconst Main = styled.div`\n    margin-bottom: 50px;\n`;\n\nconst Side = styled.div`\n    overflow-x: auto;\n    height: 200px;\n    ::-webkit-scrollbar { width: 5.2px; }\n    ::-webkit-scrollbar-track { background-color: rgba(0, 0, 0, .5); border-radius: 10px; }\n    ::-webkit-scrollbar-thumb {\n        background-color: #e74c3c;\n        border-radius: 10px;\n        :hover { background-color: #c0392b; }\n        :active { background-color: #d35400; }\n    }\n    ::-webkit-scrollbar-button { display: none; }\n`;\n\nconst Iframe = styled.iframe`\n    border-radius: 10px;\n    width: 80%;\n    height: 320px;\n`;\n\nconst List =styled.div`\n    display: flex;\n`;\n\nconst VideoList = styled.div`\n    position: relative;\n`;\n\n\nconst Videos = styled.iframe`\n\n`;\n\nconst StateBtn = styled.div`\n    position: absolute;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, .5);\n    z-index: 1;\n    border: ${props => props.select? \"4px solid #c0392b\": \"\" };\n`;\n\n\nconst VideoBtn = ({ id, idx, num, setNum }) => (\n    <VideoList>\n        <Videos src={`https://www.youtube.com/embed/${id}`}></Videos>\n        <StateBtn onClick={() => setNum(idx)} select={idx === num}></StateBtn>\n    </VideoList>\n);\n\n\nexport default ({ videos }) => {\n    const [num, setNum] = useState(0);\n\n    return (<Container>\n        {(videos && videos.length > 0)? (\n            <>\n                <Main>\n                    <Iframe src={`https://www.youtube.com/embed/${videos[num].key}`} allowFullScreen />\n                </Main>\n                <Side>\n                    <List>\n                        {videos.map((item, idx)=> <VideoBtn key={item.id} id={item.key} idx={idx} num={num} setNum={setNum} />)}\n                    </List>\n                </Side>\n            </>\n        ): \"관련 영상이 없습니다.\"}\n    </Container>\n)\n};","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 600px;\n    overflow-y: auto;\n    ::-webkit-scrollbar { width: 5.2px; }\n    ::-webkit-scrollbar-track { background-color: rgba(0, 0, 0, .5); border-radius: 10px; }\n    ::-webkit-scrollbar-thumb {\n        background-color: #e74c3c;\n        border-radius: 10px;\n        :hover { background-color: #c0392b; }\n        :active { background-color: #d35400; }\n    }\n    ::-webkit-scrollbar-button { display: none; }\n`;\n\nconst Actors = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst ActorDiv = styled.div`\n    width: 150px;\n    margin-right: 10px;\n    margin-bottom: 10px;\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst ActorImg = styled.div`\n    border-radius: 10px;\n    background-image: url(${props => props.img? `https://image.tmdb.org/t/p/w300${props.img}` : require(\"../assets/noImage.png\").default});\n    background-position: center center;\n    background-size: cover;\n    width: 130px;\n    height: 150px;\n`;\n\nconst Texts = styled.div`\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    align-items: center;\n    margin: 10px 0;\n`;\n\nconst Name = styled.div`\n    font-weight: 600;\n    font-size: 16px;\n    margin-bottom: 5px;\n    text-align: center;\n`;\n\nconst RealName = styled.div`\n    color: rgba(255, 225, 255, .7);\n`;\n\nconst Actor = ({actor}) => (\n    <ActorDiv>\n        <ActorImg img={actor.profile_path} />\n        <Texts>\n            <Name>{actor.character}</Name>\n            <RealName>{actor.name}</RealName>\n        </Texts>\n    </ActorDiv>\n)\n\nexport default ({ cast }) => (\n    <Container>\n        <Actors>\n        {cast.map(actor => <Actor key={actor.id} actor={actor} />)}\n        </Actors>\n    </Container>\n)","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div``;\n\nconst Seasons = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst Season = styled.div`\n    margin-right: 10px;\n`;\n\nconst SeasonImg = styled.div`\n    background-image: url(${props => props.img? `https://image.tmdb.org/t/p/original/${props.img}`: require(\"../assets/noImage.png\").default});\n    background-position: center center;\n    background-size: cover;\n    width: 150px;\n    height: 230px;\n    border-radius: 10px;\n`;\n\nconst Texts = styled.div`\n    margin: 10px 0;\n`;\n\nconst Name = styled.div`\n    font-size: 17px;\n    font-weight: 600;\n`;\n\nconst Date = styled.div`\n    margin-top: 5px;\n    color: rgba(255, 255, 255, .7);\n`;\n\nexport default ({ seasons }) => (\n    <Container>\n        <Seasons>\n            {seasons.map(season => (\n                <Season>\n                    <SeasonImg img={season.poster_path}></SeasonImg>\n                    <Texts>\n                        <Name>{season.name}</Name>\n                        <Date>{season.air_date}</Date>\n                    </Texts>\n                </Season>\n            ))}\n        </Seasons>\n    </Container>\n)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport { Link, Route } from 'react-router-dom';\nimport MenuBar from 'Components/MenuBar';\nimport Overview from 'Components/Overview';\nimport Videos from 'Components/Videos';\nimport Actors from 'Components/Actors';\nimport Seasons from 'Components/Seasons';\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(2px);\n    opacity: .5;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n`;\n\nconst Cover = styled.div`\n    @media only screen and (min-width: 800px) {\n        display: block;\n    }\n    width: 30%;\n    height: 90%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    border-radius: 5px;\n    display: none;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst IMDB = styled.span`\n    margin-left: 10px;\n    padding: 5px;\n    border: 1px solid black;\n    color: black;\n    font-weight: 600;\n    border-radius: 5px;\n    background: linear-gradient(0deg, #886f0b 0%, #deb100 50%, #fadf75 75%, #f1c40f 100%);\n`;\n\nconst More = styled.div`\n    width: 80%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) => (\n    loading ? <Loader /> : (\n        <Container>\n            <Backdrop\n                bgImage={result.backdrop_path ? `https://image.tmdb.org/t/p/original${result.backdrop_path}` : require(\"../../assets/noImage.png\").default}\n            />\n            <Content>\n                <Cover\n                    bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../assets/noImage.png\").default}\n                />\n                <Data>\n                    <Title>\n                        {result.title ? result.title : result.name}\n                    </Title>\n                    <ItemContainer>\n                        <Item>{result.release_date ?\n                            result.release_date.substring(0, 4)\n                            : result.first_air_date.substring(0, 4)\n                        }</Item>\n                        <Divider>●</Divider>\n                        <Item>{result.runtime ?\n                            result.runtime\n                            : result.episode_run_time[0]\n                        } 분</Item>\n                        <Divider>●</Divider>\n                        <Item>{\n                            result.genres.map((genre, idx) =>\n                                idx === result.genres.length - 1 ?\n                                    genre.name :\n                                    `${genre.name} / `\n                            )\n                        }\n                        </Item>\n                        <Item><IMDB><a href={`https://www.imdb.com/title/${result.imdb_id}`} target=\"_blank\">IMDB</a></IMDB></Item>\n                    </ItemContainer>\n                    <MenuBar />\n                    <More>\n                        <Route path=\"/:kind/:id/overview\" component={() => <Overview overview={result.overview} companies={result.production_companies} />} />\n                        <Route path=\"/:kind/:id/videos\" component={() => <Videos videos={result.videos.results} />} />\n                        <Route path=\"/:kind/:id/actors\" component={() => <Actors cast={result.credits.cast} />} />\n                        <Route path=\"/:kind/:id/seasons\" component={() => <Seasons seasons={result.seasons} />} />\n                    </More>\n                </Data>\n            </Content>\n        </Container>\n    )\n);\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;","import React from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from 'api';\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const {\n            location: { pathname }\n        } = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: { id }\n            },\n            history: { push }\n        } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        try {\n            if(isMovie) {\n                ({\n                    data:result\n                } = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({\n                    data: result\n                } = await tvApi.showDetail(parsedId));\n            }\n        }catch {\n            this.setState({ error: \"Can't find a anything.\" });\n        }finally {\n            this.setState({ loading: false, result });\n        }\n    }\n\n    render() {\n        const { result, error, loading } = this.state;\n        console.log(result)\n        return (\n            <DetailPresenter\n                result={result}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import React from 'react';\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Home from 'Routes/Home';\nimport Search from 'Routes/Search';\nimport Header from 'Components/Header';\nimport TV from 'Routes/TV';\nimport Detail from 'Routes/Detail';\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/tv\" component={TV} />\n                <Route path=\"/search\" component={Search} />\n                <Route path=\"/movie/:id\" component={Detail} />\n                <Route path=\"/show/:id\" component={Detail} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n)","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}